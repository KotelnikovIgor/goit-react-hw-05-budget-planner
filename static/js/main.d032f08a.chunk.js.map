{"version":3,"sources":["redux/types.js","redux/rootReducer.js","redux/budget/budgetReducer.js","redux/store.js","components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","components/BudgetForm.js","redux/budget/budgetAction.js","components/ExpenseForm.js","redux/budget/budgetSelectors.js","components/ExpensesTable.js","components/Value.js","components/Values.js","components/App.js","index.js"],"names":["types","SAVE_BUDGET","ADD_EXPENSE","DELETE_EXPENSE","rootReducer","combineReducers","budget","state","type","payload","expenses","expense","filter","el","id","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","value","onChange","name","StyledButton","button","Button","onClick","BudgetForm","handleChange","e","setState","target","handleSubmit","preventDefault","onSave","this","Component","connect","dispatch","saveBudgetAction","ExpenseForm","amount","shortid","generate","getSelectBudget","getExpenses","selectTotalExpenses","reduce","acc","Number","Table","table","items","onRemove","map","key","Container","div","isPositive","p","Amount","Value","section","balance","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d032f08a.chunk.js","sourcesContent":["const types = {\n  //budget\n  SAVE_BUDGET: 'SAVE_BUDGET',\n\n  //expense\n  ADD_EXPENSE: 'ADD_EXPENSE',\n  DELETE_EXPENSE: 'DELETE_EXPENSE',\n};\n\nexport default types;\n","import { combineReducers } from 'redux';\nimport {\n  saveBudgetReducer,\n  expensesReducer,\n} from '../redux/budget/budgetReducer';\n\nconst rootReducer = combineReducers({\n  budget: saveBudgetReducer,\n  expenses: expensesReducer,\n});\n\nexport default rootReducer;\n","import types from '../types';\n\nexport const saveBudgetReducer = (state = 0, { type, payload }) => {\n  switch (type) {\n    case types.SAVE_BUDGET:\n      return payload.budget;\n\n    default:\n      return state;\n  }\n};\n\nexport const expensesReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case types.ADD_EXPENSE:\n      return [payload.expense, ...state];\n\n    case types.DELETE_EXPENSE:\n      return state.filter(el => el.id !== payload.id);\n\n    default:\n      return state;\n  }\n};\n","import { createStore } from 'redux';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nexport default Form;\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLabel = styled.label`\r\n  display: inline-block;\r\n  font-size: 20px;\r\n  color: #171718;\r\n  cursor: pointer;\r\n  ${props => props.customStyles}\r\n`;\r\n\r\nconst Label = ({ children, customStyles }) => (\r\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\r\n);\r\n\r\nexport default Label;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  color: #171718;\r\n  font: inherit;\r\n  font-size: 1.2rem;\r\n  padding: 16px;\r\n  border-radius: 4px;\r\n  border: 1px solid #bdbdbd;\r\n  width: 100%;\r\n  outline: 0;\r\n\r\n  &:focus {\r\n    border: 1px solid #2b32b2;\r\n  }\r\n`;\r\n\r\nconst Input = ({\r\n  type = \" text\",\r\n  value = \"\",\r\n  onChange = () => null,\r\n  name = \"\"\r\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  border: 0;\r\n  outline: 0;\r\n  padding: 8px 24px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\r\n  font: inherit;\r\n  text-transform: uppercase;\r\n  user-select: none;\r\n\r\n  transition: background-color 200ms ease-in-out;\r\n\r\n  &:hover {\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\nconst Button = ({ type = \"button\", label = \"\", onClick = () => null }) => (\r\n  <StyledButton type={type} onClick={onClick}>\r\n    {label}\r\n  </StyledButton>\r\n);\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\nimport Form from './shared/Form';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\nimport { connect } from 'react-redux';\nimport { saveBudgetAction } from '../redux/budget/budgetAction';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nclass BudgetForm extends Component {\n  state = {\n    budget: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      budget: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSave(this.state.budget);\n    this.setState({ budget: 0 });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input\n            type=\"number\"\n            value={this.state.budget}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: budget => dispatch(saveBudgetAction(budget)),\n});\n\nexport default connect(null, mapDispatchToProps)(BudgetForm);\n","import types from '../types';\n\nexport const saveBudgetAction = budget => ({\n  type: types.SAVE_BUDGET,\n  payload: {\n    budget,\n  },\n});\n\nexport const addExpenseAction = expense => ({\n  type: types.ADD_EXPENSE,\n  payload: {\n    expense,\n  },\n});\n\nexport const deleteExpenseAction = expenseId => ({\n  type: types.DELETE_EXPENSE,\n  payload: {\n    id: expenseId,\n  },\n});\n","import React, { Component } from 'react';\nimport Form from './shared/Form';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport { addExpenseAction } from '../redux/budget/budgetAction';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nclass ExpenseForm extends Component {\n  state = {\n    name: '',\n    amount: 0,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSave({ ...this.state, id: shortid.generate() });\n    this.setState({ name: '', amount: 0 });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            value={this.state.amount}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: budget => dispatch(addExpenseAction(budget)),\n});\n\nexport default connect(null, mapDispatchToProps)(ExpenseForm);\n","export const getSelectBudget = state => state.budget;\n\nexport const getExpenses = state => state.expenses;\n\nexport const selectTotalExpenses = state => {\n  const value = getExpenses(state);\n  return value.reduce((acc, el) => acc + Number(el.amount), 0);\n};\n\nexport const selectCalculateBalance = state =>\n  getSelectBudget(state) - selectTotalExpenses(state);\n","import React from 'react';\nimport styled from 'styled-components';\nimport Button from './shared/Button';\nimport { connect } from 'react-redux';\nimport { getExpenses } from '../redux/budget/budgetSelectors';\nimport { deleteExpenseAction } from '../redux/budget/budgetAction';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ items = [], onRemove }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Expense name</th>\n        <th>Expense amount</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(({ id, name, amount }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>{amount}</td>\n          <td>\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nconst mapStateToProps = store => ({\n  items: getExpenses(store),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => dispatch(deleteExpenseAction(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  padding: 8px 24px;\r\n  color: ${props => (props.isPositive ? \"#388E3C\" : \"#D32F2F\")};\r\n  user-select: none;\r\n`;\r\n\r\nconst Label = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 8px;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Amount = styled.p`\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 48px;\r\n`;\r\n\r\nconst Value = ({ label, value, isPositive }) => (\r\n  <Container isPositive={isPositive}>\r\n    <Label>{label}</Label>\r\n    <Amount>{value}&nbsp;&#x24;</Amount>\r\n  </Container>\r\n);\r\n\r\nexport default Value;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport Value from './Value';\nimport { connect } from 'react-redux';\nimport {\n  getSelectBudget,\n  selectTotalExpenses,\n  selectCalculateBalance,\n} from '../redux/budget/budgetSelectors';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budget, expenses, balance }) => (\n  <Container>\n    <Value label=\"Budget\" value={budget} isPositive />\n    <Value label=\"Expenses\" value={expenses} />\n    <Value label=\"Balance\" value={balance} isPositive={balance >= 0} />\n  </Container>\n);\n\nconst mapStateToProps = store => ({\n  budget: getSelectBudget(store),\n  balance: selectCalculateBalance(store),\n  expenses: selectTotalExpenses(store),\n});\n\nexport default connect(mapStateToProps, null)(Values);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport BudgetForm from './BudgetForm';\nimport ExpenseForm from './ExpenseForm';\nimport ExpensesTable from './ExpensesTable';\nimport Values from './Values';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\n// const calculateTotalExpenses = expenses => {\n//   return expenses.reduce((total, expense) => total + expense.amount, 0);\n// };\n\n// const calculateBalance = (budget, expenses) => budget - expenses;\n\nconst App = ({ expenses }) => {\n  return (\n    <Container>\n      <BudgetForm />\n      <Values />\n      <ExpenseForm />\n      {expenses.length > 0 && <ExpensesTable />}\n    </Container>\n  );\n};\n\nconst mapStateToProps = store => ({\n  expenses: store.expenses,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App';\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}